plugins {
	id 'org.springframework.boot' version '2.7.1'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
	id 'java'
}

group = 'com'
version = '0.1.2'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'

	implementation 'io.springfox:springfox-boot-starter:3.0.0'
	implementation 'com.oracle.oci.sdk:oci-java-sdk-common:2.36.1'
	implementation 'com.oracle.oci.sdk:oci-java-sdk-filestorage:2.36.1'
	implementation 'com.oracle.oci.sdk:oci-java-sdk-core:2.36.1'
	implementation 'com.oracle.oci.sdk:oci-java-sdk-objectstorage-generated:2.36.1'
	implementation 'com.oracle.oci.sdk:oci-java-sdk-objectstorage-extensions:2.36.1'
	implementation 'commons-fileupload:commons-fileupload:1.4'
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.8.0'

    runtimeOnly 'mysql:mysql-connector-java'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

	implementation group: 'org.hibernate', name: 'hibernate-spatial', version: '5.6.9.Final'
	//firebase sdk
	implementation 'com.google.firebase:firebase-admin:9.1.0'
	//okhttp
	implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.2.2'
}

bootRun {
	String activeProfile = System.properties['spring.profiles.active']
	systemProperty "spring.profiles.active", activeProfile
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

test {
	useJUnitPlatform()
	outputs.dir snippetsDir
}

asciidoctor {
	dependsOn test
	inputs.dir snippetsDir
}

task copyDocument(type: Copy) {
	dependsOn asciidoctor

	from file("build/docs/asciidoc")
	into file("src/main/resources/static/docs")
}

bootJar{
	duplicatesStrategy = DuplicatesStrategy.INCLUDE
	dependsOn copyDocument

	from("build/docs/asciidoc"){
		into "BOOT-INF/classes/static/docs"
	}
}